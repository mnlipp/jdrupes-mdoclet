apply plugin: 'signing'
apply plugin: 'maven-publish'
apply plugin: "com.gradle.plugin-publish"

dependencies {
    implementation gradleApi()
    implementation localGroovy()
}

// Configure sensible layout
sourceSets {
	main {
		groovy {
			srcDir 'src'
		}
		resources {
			srcDir 'resources'
		}
	}
}

processResources {
	//noinspection UnnecessaryQualifiedReference
	filter org.apache.tools.ant.filters.ReplaceTokens, tokens: [
			"org.jdrupes.mdoclet-version": project(':mdoclet').version
	]
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allJava
	classifier "sources"
}
  
task javadocJar(type: Jar) {
	from (project.rootDir) {
		include 'README.md'
	}
	classifier "javadoc"
}

// Publish to gradle

pluginBundle {
	website = 'https://github.com/mnlipp/jdrupes-mdoclet'
	vcsUrl = 'https://github.com/mnlipp/jdrupes-mdoclet'
	description = 'A plugin for configuring MDoclet (a doclet for Markdown javadoc comments)'
	tags = ['javadoc', 'doclet', 'markdown']
  
	plugins {
		mdocletPlugin {
			id = 'org.jdrupes.mdoclet'
			displayName = 'MDoclet configuration plugin'
		}
	}
}
  
// MavenPublishing (new), incomplete, works only for local. 

publishing {
	
    repositories {
        maven {
            name "snapshot"
            url "https://oss.sonatype.org/content/repositories/snapshots/"
            credentials {
                username project.properties['sonatypeUsername'] ?: "nouser"
                password project.properties['sonatypePassword'] ?: "nopass"
            }
        }
        maven {
            name "release"
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username project.properties['sonatypeUsername'] ?: "nouser"
                password project.properties['sonatypePassword'] ?: "nopass"
            }
        }
    }    
    
    publications {
        mavenJava(MavenPublication) {
            artifactId = archivesBaseName
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

// Additional configuration of publishing
apply plugin: ConfigurePublishing

configurePublishing {
    withPomXml {
        asNode().with {
            appendNode('url', 'https://github.com/mnlipp/jdrupes-mdoclet')
            appendNode('scm').with {
                appendNode('url', 'scm:git@github.com:mnlipp/jdrupes-mdoclet.git')
                appendNode('connection', 'scm:git@github.com:mnlipp/jdrupes-mdoclet.git')
                appendNode('developerConnection', 'git@github.com:mnlipp/jdrupes-mdoclet.git')
            }
            appendNode('licenses').with {
                appendNode('license').with {
                    appendNode('name', 'AGPL 3.0')
                    appendNode('url', 'https://www.gnu.org/licenses/gpl-3.0.en.html')
                    appendNode('distribution', 'repo')
                }
            }
            appendNode('developers').with {
                appendNode('developer').with {
                    appendNode('id', 'mnlipp')
                    appendNode('name', 'Michael N. Lipp')
                }
            }
        }
    }
}

apply plugin: 'com.jfrog.bintray'

bintray {
    user = project.properties['bintrayUser'] ?: "nouser"
    key = project.properties['bintrayApiKey'] ?: "nokey"
    publications = ['maven']
    publish = true
    pkg {
        repo = "jdrupes"
        name = "org.jdrupes.mdoclet:gradle-plugin"
        licenses = ['AGPL-V3']
        vcsUrl = 'https://github.com/mnlipp/jdrupes-mdoclet.git'
        githubRepo = 'mnlipp/jdrupes-mdoclet'
        githubReleaseNotesFile = 'README.md'
        version {
             name = project.version
             gpg {
                 sign = true
             }
             mavenCentralSync {
                sync = true
                user = project.properties['sonatypeTokenKey'] ?: "nokey"
                password = project.properties['sonatypeTokenSecret'] ?: "nosecret"
                close = '1'
             }
        }
    }
}
