/*
 * JDrupes MDoclet
 * Copyright (C) 2017  Michael N. Lipp
 * 
 * This program is free software; you can redistribute it and/or modify it 
 * under the terms of the GNU General Public License as published by 
 * the Free Software Foundation; either version 3 of the License, or 
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but 
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License 
 * for more details.
 * 
 * You should have received a copy of the GNU General Public License along 
 * with this program; if not, see <http://www.gnu.org/licenses/>.
 */

plugins {
	id "com.jfrog.bintray" version "1.7.3"
}

apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'maven-publish'
apply plugin: 'maven'

sourceCompatibility = '1.8'

dependencies {
	compile libs.markdown
    compileOnly libs.jdkTools

    testCompile group: 'org.jsoup', name: 'jsoup', version: '1.8.3'
}

archivesBaseName = "doclet"

// Configure sensible layout
sourceSets {
    main {
        java {
            srcDir 'src'
        }
		resources {
			srcDir 'resources'
		}
    }
}

javadoc {
	dependsOn classes
	inputs.file "overview.md"

//	if (javax.tools.ToolProvider.getSystemDocumentationTool()
//        .isSupportedOption("--allow-script-in-comments")) {
//        options.addBooleanOption("-allow-script-in-comments", true)
//    }

	title = "JDrupes MDoclet"
		
	options.docletpath = (sourceSets.main.output + sourceSets.main.compileClasspath) as List
	options.doclet = "org.jdrupes.mdoclet.MDoclet"

	// Without sourcepath and subpackages, @links in overview aren't rendered as hrefs 
	options.addStringOption("sourcepath", "src")	
	options.addStringOption("subpackages", "org.jdrupes.mdoclet")

	destinationDir = file("../../jdrupes-mdoclet.gh-pages/javadoc/")
	
	options.addStringOption("overview", "overview.md")
	options.addBooleanOption("disable-auto-highlight", true)
	options.addBooleanOption("linksource", true)
	options.links("http://docs.oracle.com/javase/8/docs/api/")
	options.stylesheetFile(file("stylesheet.css"))
	options.addStringOption("bottom", file("misc/javadoc.bottom.txt").text)

}

task sourcesJar(type: Jar) {
	from sourceSets.main.allJava
	classifier "sources"
}

task javadocJar(type: Jar) {
	from javadoc.destinationDir
	classifier "javadoc"
}

// Allow build without signing information (e.g. travis)
if (project.hasProperty('signing.keyId')) {
	signing {
		sign configurations.archives
	}
}

// MavenPublishing (new), incomplete, works only for local. 

publishing {
	
	publications {
		mavenJava(MavenPublication) {
			artifactId = archivesBaseName
			from components.java
			artifact sourcesJar
			artifact javadocJar
		}
	}
}

// MavenPublishing (original), still needed for remote 

uploadArchives {
	repositories {
		mavenDeployer {
			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
 
			pom.project {
			
				name project.name
				artifactId project.archivesBaseName
				packaging 'pom'
				description project.description
				url 'https://github.com/mnlipp/jdrupes-mdoclet'
 
				scm {
					url 'scm:git@github.com:mnlipp/jdrupes-mdoclet.git'
					connection 'scm:git@github.com:mnlipp/jdrupes-mdoclet.git'
					developerConnection 'git@github.com:mnlipp/jdrupes-mdoclet.git'
				}
 
				licenses {
					license {
						name 'GPL 3.0'
						url 'https://www.gnu.org/licenses/gpl-3.0.en.html'
						distribution 'repo'
					}
				}
 
				developers {
					developer {
						id 'mnlipp'
						name 'Michael N. Lipp'
					}
				}
			}
			
			artifacts {
				archives jar
				archives sourcesJar
				archives javadocJar
			}

			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: project.properties['sonatypeUsername'] ?: "nouser", 
					password: project.properties['sonatypePassword'] ?: "nopass")
			}
			snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
				authentication(userName: project.properties['sonatypeUsername'] ?: "nouser", 
					password: project.properties['sonatypePassword'] ?: "nopass")
			}

		}
	}
}

bintray {
	user = project.properties['bintrayUser'] ?: "nouser"
	key = project.properties['bintrayApiKey'] ?: "nokey"
	publications = ['mavenJava']
	publish = true
	pkg {
		repo = "org.jdrupes"
		name = "mdoclet"
		version {
			 name = project.version
			 gpg {
				 sign = true
			 }
		}
	}
 }
